[tool.poetry]
name = "ymdantic"
version = "0.1.2"
description = "Фреймворк предоставляющий доступ к API Яндекс Музыки (с Pydantic валидацией)"
authors = ["KatantDev <vlad26@mail.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
aiohttp = "^3.9.0"
pydantic = "^2.4"
dataclass-rest = "^0.4"
certifi = "^2023.11.17"


[tool.poetry.group.dev.dependencies]
black = "^23"
mypy = "^1.8"
ruff = "^0.1"
pre-commit = "^3"

[tool.black]
target-version = ['py310', 'py311', 'py312']
exclude = '''
(
    \.eggs
  | \.git
  | build
  | dist
  | venv
)
'''

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 88
select = [
    "C4",
    "E",
    "F",
    "T10",
    "T20",
    "Q",
    "RET",
]
src = ["ymdantic"]
exclude = [
    ".git",
    "build",
    "dist",
    "venv",
    ".venv",
    "scripts",
    "*.egg-info",
]
target-version = "py310"

[tool.ruff.isort]
known-first-party = [
    "ymdantic",
]

[tool.ruff.per-file-ignores]
    "examples/*" = ["T201"]

[tool.mypy]
plugins = [
    "pydantic.mypy"
]
follow_imports = "silent"
allow_subclassing_any = true
allow_untyped_decorators = true
show_error_codes = true
show_error_context = true
pretty = true
warn_unused_configs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = false
follow_imports_for_stubs = true
namespace_packages = true
show_absolute_path = true

[[tool.mypy.overrides]]
module = [
    'dataclass_rest.*'
]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
